# Generated by Django 4.2.4 on 2025-03-25 02:14

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Question')),
                ('answer', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Answer')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='SiteAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Content')),
                ('publish_date', models.DateTimeField(verbose_name='Publish Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Site Announcement',
                'verbose_name_plural': 'Site Announcements',
            },
        ),
        migrations.CreateModel(
            name='TermsAndPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_type', models.CharField(choices=[('privacy_policy', 'Privacy Policy'), ('terms_of_service', 'Terms of Service'), ('community_guidelines', 'Community Guidelines'), ('data_usage_policy', 'Data Usage Policy'), ('content_moderation_policy', 'Content Moderation Policy'), ('copyright_policy', 'Copyright Policy'), ('dispute_resolution', 'Dispute Resolution and Arbitration'), ('vision_and_mission', 'Vision and Mission'), ('townlit_history', 'TownLIT History'), ('townlit_beliefs', 'TownLIT Beliefs'), ('terms_and_conditions', 'Terms and Conditions'), ('cookie_policy', 'Cookie Policy')], max_length=50, verbose_name='Policy Type')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Content')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Terms and Policy',
                'verbose_name_plural': 'Terms and Policies',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Feedback',
                'verbose_name_plural': 'User Feedbacks',
            },
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('view', 'View'), ('edit', 'Edit'), ('delete', 'Delete')], max_length=10, verbose_name='Action Type')),
                ('object_id', models.PositiveIntegerField(verbose_name='Target Instance ID')),
                ('action_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Action Timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Agent')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Target Model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Action Log',
                'verbose_name_plural': 'User Action Logs',
                'ordering': ['-action_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PolicyChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Old Content')),
                ('changed_at', models.DateTimeField(verbose_name='Changed At')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_history', to='main.termsandpolicy', verbose_name='Policy')),
            ],
            options={
                'verbose_name': 'Policy Change History',
                'verbose_name_plural': 'Policy Change Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAgreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreed_at', models.DateTimeField(auto_now_add=True, verbose_name='Agreed At')),
                ('is_latest_agreement', models.BooleanField(default=True, verbose_name='Is Latest Agreement')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_agreements', to='main.termsandpolicy', verbose_name='Policy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreements', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Agreement',
                'verbose_name_plural': 'User Agreements',
                'unique_together': {('user', 'policy')},
            },
        ),
    ]

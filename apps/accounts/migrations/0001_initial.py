# Generated by Django 4.2.4 on 2025-03-25 02:14

import colorfield.fields
import common.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_number', models.CharField(blank=True, max_length=100, verbose_name='Streen Number')),
                ('route', models.CharField(blank=True, max_length=100, verbose_name='Route')),
                ('locality', models.CharField(blank=True, max_length=100, verbose_name='Locality')),
                ('administrative_area_level_1', models.CharField(blank=True, max_length=100, verbose_name='Administrative Area Level 1')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('additional', models.CharField(blank=True, max_length=400, null=True, verbose_name='Additional')),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('office', 'Office'), ('warehouse', 'Warehouse'), ('church', 'Church'), ('school', 'School'), ('university', 'University'), ('conference_center', 'Conference Center'), ('mission_center', 'Mission Center'), ('counseling_center', 'Christian Counseling Center'), ('branch', 'Branch'), ('friends_home', "Friend's Home"), ('supplier', 'Supplier'), ('gym', 'Gym'), ('charity_center', 'Charity Center'), ('distribution_point', 'Distribution Point'), ('event_location', 'Event Location'), ('youth_center', 'Youth Center'), ('retreat_center', 'Retreat Center'), ('other', 'Other')], default='home', max_length=20, verbose_name='Address Type')),
            ],
            options={
                'verbose_name': 'Custom Address',
                'verbose_name_plural': 'Custom Addresses',
            },
        ),
        migrations.CreateModel(
            name='CustomLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('believer', 'Believer'), ('seeker', 'Seeker'), ('prefer_not_to_say', 'Prefer Not To Say')], max_length=20, unique=True, verbose_name='Label Name')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Color Code')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
            },
        ),
        migrations.CreateModel(
            name='OrganizationService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('addiction_recovery', 'Addiction Recovery'), ('bible_study', 'Bible Study'), ('chaplaincy_services', 'Chaplaincy Services'), ('children_services', 'Children Services'), ('christian_broadcasting', 'Christian Broadcasting'), ('christian_camps', 'Christian Camps'), ('christian_hospital', 'Christian Hospital'), ('christian_legal_services', 'Christian Legal Services'), ('christian_music', 'Christian Music'), ('christian_schools', 'Christian Schools'), ('christian_university', 'Christian University'), ('church_services', 'Church Services'), ('community_centers', 'Community Centers'), ('counseling_services', 'Counseling Services'), ('development_programs', 'Development Programs'), ('disability_ministries', 'Disability Ministries'), ('disaster_relief', 'Disaster Relief'), ('drama_and_theater', 'Drama and Theater'), ('elderly_care', 'Elderly Care'), ('environmental_stewardship', 'Environmental Stewardship'), ('evangelistic_campaigns', 'Evangelistic Campaigns'), ('family_retreats', 'Family Retreats'), ('food_banks', 'Food Banks'), ('health_clinic', 'Health Clinic'), ('homeless_shelters', 'Homeless Shelters'), ('human_rights_advocacy', 'Human Rights Advocacy'), ('international_missions', 'International Missions'), ('interfaith_dialogues', 'Interfaith Dialogues'), ('job_training', 'Job Training'), ('local_missions', 'Local Missions'), ('marriage_counseling', 'Marriage Counseling'), ('medical_mission', 'Medical Mission'), ('mens_ministries', "Men's Ministries"), ('mental_health_ministries', 'Mental Health Ministries'), ('online_ministries', 'Online Ministries'), ('orphanage', 'Orphanage'), ('parenting_classes', 'Parenting Classes'), ('publishing', 'Publishing'), ('prayer_meetings', 'Prayer Meetings'), ('refugee_assistance', 'Refugee Assistance'), ('sunday_school', 'Sunday School'), ('sports_ministries', 'Sports Ministries'), ('theological_education', 'Theological Education'), ('vacation_bible_school', 'Vacation Bible School'), ('visual_arts', 'Visual Arts'), ('womens_ministries', "Women's Ministries"), ('worship_concerts', 'Worship Concerts'), ('youth_services', 'Youth Services')], max_length=50, unique=True, verbose_name='Organization Service')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Organization Service Category',
                'verbose_name_plural': 'Organization Service Categories',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('x', 'X'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('whatsapp', 'WhatsApp'), ('telegram', 'Telegram'), ('tiktok', 'TikTok'), ('pinterest', 'Pinterest'), ('snapchat', 'Snapchat'), ('discord', 'Discord'), ('twitch', 'Twitch'), ('vimeo', 'Vimeo'), ('line', 'Line'), ('vk', 'VK'), ('qq', 'QQ'), ('reddit', 'Reddit'), ('website', 'Website')], max_length=20, unique=True, verbose_name='Social Media Name')),
                ('icon_class', models.CharField(blank=True, max_length=100, null=True, verbose_name='FontAwesome Class')),
                ('icon_svg', models.TextField(blank=True, null=True, verbose_name='SVG Icon Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Social Media Type',
                'verbose_name_plural': 'Social Media Types',
            },
        ),
        migrations.CreateModel(
            name='SpiritualService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('administration', 'Administration'), ('charitable_work', 'Charitable Work'), ('chaplaincy', 'Chaplaincy'), ('childrens_ministry', 'Childrenâ€™s Ministry'), ('church_planting', 'Church Planting'), ('counseling', 'Counseling'), ('discipleship', 'Discipleship'), ('evangelism', 'Evangelism'), ('healing_ministry', 'Healing Ministry'), ('hospital_visitation', 'Hospital Visitation'), ('hospitality', 'Hospitality'), ('intercessory_prayer', 'Intercessory Prayer'), ('leadership', 'Leadership'), ('media_ministry', 'Media Ministry'), ('missionary_work', 'Missionary Work'), ('music_ministry', 'Music Ministry'), ('outreach_ministry', 'Outreach Ministry'), ('pastoring', 'Pastoring'), ('prayer_ministry', 'Prayer Ministry'), ('small_group_leadership', 'Small Group Leadership'), ('spiritual_direction', 'Spiritual Direction'), ('support_group_leadership', 'Support Group Leadership'), ('teaching', 'Teaching'), ('worship_leadership', 'Worship Leadership'), ('youth_ministry', 'Youth Ministry')], max_length=40, unique=True, verbose_name='Name of Service')),
                ('color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=18, null=True, samples=None, verbose_name='Color Code')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Spiritual Service',
                'verbose_name_plural': 'Spiritual Services',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(max_length=500, verbose_name='URL Link')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('object_id', models.PositiveIntegerField(verbose_name='Object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('social_media_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='url_links', to='accounts.socialmediatype', verbose_name='Social Media Type')),
            ],
            options={
                'verbose_name': 'URL Link',
                'verbose_name_plural': 'URL Links',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('last_email_change', models.DateTimeField(blank=True, null=True, verbose_name='Last Email Change')),
                ('email_change_tokens', models.JSONField(blank=True, help_text='Stores tokens for email change verification.', null=True, verbose_name='Email Change Tokens')),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, validators=[common.validators.validate_phone_number], verbose_name='Mobile Number')),
                ('mobile_verification_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='Mobile Verification Code')),
                ('mobile_verification_expiry', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Name')),
                ('family', models.CharField(blank=True, max_length=40, null=True, verbose_name='Family')),
                ('username', models.CharField(blank=True, max_length=40, unique=True, verbose_name='Username')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6, null=True, verbose_name='Gender')),
                ('country', models.CharField(blank=True, choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BR', 'Brazil'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CR', 'Costa Rica'), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GR', 'Greece'), ('GD', 'Grenada'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', 'Korea (North)'), ('KR', 'Korea (South)'), ('XK', 'Kosovo'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('MK', 'North Macedonia'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PL', 'Poland'), ('PT', 'Portugal'), ('QA', 'Qatar'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('US', 'United States'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=2, null=True, verbose_name='Country')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('primary_language', models.CharField(choices=[('en', 'English'), ('af', 'Afrikaans'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('hy', 'Armenian'), ('az', 'Azerbaijani'), ('eu', 'Basque'), ('bn', 'Bengali'), ('bs', 'Bosnian'), ('bg', 'Bulgarian'), ('my', 'Burmese'), ('ca', 'Catalan'), ('zh', 'Chinese'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('nl', 'Dutch'), ('et', 'Estonian'), ('tl', 'Filipino'), ('fi', 'Finnish'), ('fr', 'French'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek'), ('gu', 'Gujarati'), ('ha', 'Hausa'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('ig', 'Igbo'), ('id', 'Indonesian'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jv', 'Javanese'), ('kn', 'Kannada'), ('kk', 'Kazakh'), ('ko', 'Korean'), ('ku', 'Kurdish'), ('ky', 'Kyrgyz'), ('lo', 'Lao'), ('lv', 'Latvian'), ('lt', 'Lithuanian'), ('mk', 'Macedonian'), ('mg', 'Malagasy'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('mr', 'Marathi'), ('mn', 'Mongolian'), ('ne', 'Nepali'), ('no', 'Norwegian'), ('or', 'Oriya'), ('ps', 'Pashto'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pa', 'Punjabi'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sr', 'Serbian'), ('si', 'Sinhala'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('so', 'Somali'), ('es', 'Spanish'), ('sw', 'Swahili'), ('sv', 'Swedish'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('cy', 'Welsh'), ('xh', 'Xhosa'), ('yo', 'Yoruba'), ('zu', 'Zulu'), ('other', 'Other')], default='en', max_length=5, verbose_name='Primary Language')),
                ('secondary_language', models.CharField(blank=True, choices=[('en', 'English'), ('af', 'Afrikaans'), ('sq', 'Albanian'), ('am', 'Amharic'), ('ar', 'Arabic'), ('hy', 'Armenian'), ('az', 'Azerbaijani'), ('eu', 'Basque'), ('bn', 'Bengali'), ('bs', 'Bosnian'), ('bg', 'Bulgarian'), ('my', 'Burmese'), ('ca', 'Catalan'), ('zh', 'Chinese'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('nl', 'Dutch'), ('et', 'Estonian'), ('tl', 'Filipino'), ('fi', 'Finnish'), ('fr', 'French'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek'), ('gu', 'Gujarati'), ('ha', 'Hausa'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('ig', 'Igbo'), ('id', 'Indonesian'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('jv', 'Javanese'), ('kn', 'Kannada'), ('kk', 'Kazakh'), ('ko', 'Korean'), ('ku', 'Kurdish'), ('ky', 'Kyrgyz'), ('lo', 'Lao'), ('lv', 'Latvian'), ('lt', 'Lithuanian'), ('mk', 'Macedonian'), ('mg', 'Malagasy'), ('ms', 'Malay'), ('ml', 'Malayalam'), ('mr', 'Marathi'), ('mn', 'Mongolian'), ('ne', 'Nepali'), ('no', 'Norwegian'), ('or', 'Oriya'), ('ps', 'Pashto'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pa', 'Punjabi'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sr', 'Serbian'), ('si', 'Sinhala'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('so', 'Somali'), ('es', 'Spanish'), ('sw', 'Swahili'), ('sv', 'Swedish'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('vi', 'Vietnamese'), ('cy', 'Welsh'), ('xh', 'Xhosa'), ('yo', 'Yoruba'), ('zu', 'Zulu'), ('other', 'Other')], max_length=5, null=True, verbose_name='Secondary Language')),
                ('image_name', models.ImageField(blank=True, default='media/sample/user.png', null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Image')),
                ('user_active_code', models.CharField(blank=True, max_length=200, null=True)),
                ('user_active_code_expiry', models.DateTimeField(blank=True, null=True)),
                ('register_date', models.DateField(default=django.utils.timezone.now, verbose_name='Register Date')),
                ('deletion_requested_at', models.DateTimeField(blank=True, null=True, verbose_name='Deletion Requested At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('reactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='Reactivated Date')),
                ('reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('reset_token_expiration', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is Admin')),
                ('is_member', models.BooleanField(default=False, verbose_name='Is Member')),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('registration_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='FCM Registration ID')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='Two-Factor Authentication Enabled')),
                ('two_factor_token', models.CharField(blank=True, max_length=60, null=True, verbose_name='Two-Factor Token')),
                ('two_factor_token_expiry', models.DateTimeField(blank=True, null=True, verbose_name='Two-Factor Token Expiry')),
                ('public_key', models.BinaryField(blank=True, null=True)),
                ('private_key', models.BinaryField(blank=True, null=True)),
                ('private_key_is_encrypted', models.BooleanField(default=False)),
                ('pin_security_enabled', models.BooleanField(default=False, verbose_name='Pin Security Status')),
                ('access_pin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Access Pin')),
                ('delete_pin', models.CharField(blank=True, max_length=255, null=True, verbose_name='Delete Pin')),
                ('show_email', models.BooleanField(default=False, verbose_name='Show Email Publicly')),
                ('show_phone_number', models.BooleanField(default=False, verbose_name='Show Phone Number Publicly')),
                ('show_country', models.BooleanField(default=False, verbose_name='Show Country Publicly')),
                ('show_city', models.BooleanField(default=False, verbose_name='Show City Publicly')),
                ('is_account_paused', models.BooleanField(default=False, verbose_name='Is Account Paused')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_label', to='accounts.customlabel', verbose_name='User Label')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '1. Custom User',
                'verbose_name_plural': '1. Custom Users',
            },
        ),
    ]

# Generated by Django 4.2.4 on 2025-05-26 17:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('profiles', '0002_initial'),
        ('profilesOrg', '0001_initial'),
        ('posts', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='testimony',
            name='org_tags',
            field=models.ManyToManyField(blank=True, db_index=True, related_name='tagged_in_testimonies', to='profilesOrg.organization', verbose_name='Organization Tags'),
        ),
        migrations.AddField(
            model_name='testimony',
            name='user_tags',
            field=models.ManyToManyField(blank=True, db_index=True, related_name='tagged_in_testimonies', to=settings.AUTH_USER_MODEL, verbose_name='User Tags'),
        ),
        migrations.AddField(
            model_name='serviceevent',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='serviceevent',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.address', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='reaction',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='reaction',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reactions', to=settings.AUTH_USER_MODEL, verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='preach',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='preach',
            name='in_town_preacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.member', verbose_name='Preacher In TownLIT'),
        ),
        migrations.AddField(
            model_name='pray',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='pray',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_prays', to='posts.pray', verbose_name='Sub Pray'),
        ),
        migrations.AddField(
            model_name='moment',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='moment',
            name='org_tags',
            field=models.ManyToManyField(blank=True, db_index=True, related_name='tagged_in_moments', to='profilesOrg.organization', verbose_name='Organization Tags'),
        ),
        migrations.AddField(
            model_name='moment',
            name='user_tags',
            field=models.ManyToManyField(blank=True, db_index=True, related_name='tagged_in_moments', to=settings.AUTH_USER_MODEL, verbose_name='User Tags'),
        ),
        migrations.AddField(
            model_name='mission',
            name='contact_persons',
            field=models.ManyToManyField(blank=True, related_name='mission_contact_persons', to=settings.AUTH_USER_MODEL, verbose_name='Contact Person'),
        ),
        migrations.AddField(
            model_name='mission',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='mission',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.address', verbose_name='Mission Location'),
        ),
        migrations.AddField(
            model_name='mediacontent',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='library',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='in_town_teachers',
            field=models.ManyToManyField(blank=True, db_index=True, to='profiles.member', verbose_name='Teacher In TownLIT'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_lessons', to='posts.lesson', verbose_name='Sub Lesson'),
        ),
        migrations.AddField(
            model_name='futureconference',
            name='conference_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.address', verbose_name='Conference Location'),
        ),
        migrations.AddField(
            model_name='futureconference',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='futureconference',
            name='in_town_speakers',
            field=models.ManyToManyField(blank=True, related_name='conference_speakers', to='profiles.member', verbose_name='Speaker In TownLIT'),
        ),
        migrations.AddField(
            model_name='futureconference',
            name='sponsors',
            field=models.ManyToManyField(blank=True, related_name='future_conference_sponsors', to='profilesOrg.organization', verbose_name='Sponsors'),
        ),
        migrations.AddField(
            model_name='conference',
            name='conference_resources',
            field=models.ManyToManyField(blank=True, related_name='conference_resources', to='posts.resource', verbose_name='Conference Resources'),
        ),
        migrations.AddField(
            model_name='conference',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='conference',
            name='workshops',
            field=models.ManyToManyField(blank=True, related_name='conference_workshops', to='posts.lesson', verbose_name='Workshops'),
        ),
        migrations.AddField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='comment',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='Name'),
        ),
        migrations.AddField(
            model_name='comment',
            name='recomment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='posts.comment', verbose_name='Recomment'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.address', verbose_name='Location'),
        ),
        migrations.AlterUniqueTogether(
            name='reaction',
            unique_together={('name', 'reaction_type', 'content_type', 'object_id')},
        ),
    ]

# Generated by Django 4.2.4 on 2025-04-20 16:15

import common.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from utils.common import utils




class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.CharField(max_length=500, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file], verbose_name='Announcement Image')),
                ('meeting_type', models.CharField(choices=[('online', 'Online'), ('inperson', 'In-Person'), ('hybrid', 'Hybrid')], default='IN_PERSON', max_length=10, verbose_name='Meeting Type')),
                ('url_link', models.URLField(blank=True, max_length=400, null=True, verbose_name='Meeting Link')),
                ('link_sticker_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Link Sticker Text')),
                ('to_date', models.DateTimeField(blank=True, null=True, verbose_name='Date of Announcement')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('object_id', models.PositiveIntegerField()),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Time')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
            ],
            options={
                'verbose_name': '_Comment',
                'verbose_name_plural': '_Comments',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('conference_name', models.CharField(max_length=255, verbose_name='Conference Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Conference Description')),
                ('conference_date', models.DateField(blank=True, null=True, verbose_name='Conference Date')),
                ('conference_time', models.TimeField(blank=True, null=True, verbose_name='Start Time')),
                ('conference_end_date', models.DateField(blank=True, null=True, verbose_name='Conference End Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Conference',
                'verbose_name_plural': 'Conferences',
            },
        ),
        migrations.CreateModel(
            name='FutureConference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('conference_name', models.CharField(max_length=255, verbose_name='Future Conference Name')),
                ('registration_required', models.BooleanField(default=False, verbose_name='Registration Required')),
                ('delivery_type', models.CharField(choices=[('online', 'Online'), ('inperson', 'In-Person'), ('hybrid', 'Hybrid')], default='IN_PERSON', max_length=10, verbose_name='Meeting Type')),
                ('registration_link', models.URLField(blank=True, null=True, verbose_name='Registration Link')),
                ('conference_description', models.TextField(blank=True, null=True, verbose_name='Conference Description')),
                ('out_town_speakers', models.CharField(blank=True, max_length=200, null=True, verbose_name='Speaker out TownLIT')),
                ('conference_date', models.DateField(blank=True, null=True, verbose_name='Conference Date')),
                ('conference_time', models.TimeField(blank=True, null=True, verbose_name='Start Time')),
                ('conference_end_date', models.DateField(blank=True, null=True, verbose_name='Conference End Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Future Conference',
                'verbose_name_plural': 'Future Conferences',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('season', models.IntegerField(blank=True, null=True, verbose_name='Season')),
                ('episode', models.IntegerField(blank=True, null=True, verbose_name='Episode')),
                ('out_town_teachers', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='Teacher out TownLIT')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file], verbose_name='Image Lesson')),
                ('audio', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_audio_file, common.validators.validate_no_executable_file], verbose_name='Audio Lesson')),
                ('video', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Video Lesson')),
                ('view', models.PositiveSmallIntegerField(default=0, verbose_name='View Number')),
                ('record_date', models.DateField(blank=True, null=True, verbose_name='Recorde Date')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('book_name', models.CharField(db_index=True, max_length=100, verbose_name='Name of Book')),
                ('author', models.CharField(db_index=True, max_length=100, verbose_name='Name of Author')),
                ('publisher_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Publisher Name')),
                ('language', models.CharField(max_length=50, verbose_name='Language of Book')),
                ('translation_language', models.CharField(blank=True, max_length=50, null=True, verbose_name='Language Translated')),
                ('translator', models.CharField(blank=True, max_length=50, null=True, verbose_name='Translator')),
                ('genre_type', models.CharField(choices=[('Apologetics', 'Apologetics'), ('Biblical Studies', 'Biblical Studies'), ('Biography/Autobiography', 'Biography/Autobiography'), ('Christian Fiction', 'Christian Fiction'), ('Christian Mystery/Suspense', 'Christian Mystery/Suspense'), ('Christian Devotional', 'Christian Devotional'), ('Christian Living', 'Christian Living'), ('Christian Biography/Autobiography', 'Christian Biography/Autobiography'), ('Christian Inspirational', 'Christian Inspirational'), ('Christian Historical Fiction', 'Christian Historical Fiction'), ('Drama', 'Drama'), ('Essay', 'Essay'), ('Fantasy', 'Fantasy'), ('Historical', 'Historical'), ('Poetry', 'Poetry'), ('Science', 'Science'), ('Social Issues', 'Social Issues'), ('Spiritual Growth', 'Spiritual Growth'), ('Theology', 'Theology'), ('Other', 'Other')], max_length=50, verbose_name='Genre Type')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Book Image')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_pdf_file, common.validators.validate_no_executable_file], verbose_name='Book File')),
                ('license_type', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('Owned', 'Owned by Institution')], max_length=20, verbose_name='License Type')),
                ('sale_status', models.CharField(choices=[('Free', 'Free'), ('Paid', 'Paid')], max_length=20, verbose_name='Sale Status')),
                ('license_document', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_pdf_file, common.validators.validate_no_executable_file], verbose_name='License Document')),
                ('is_upcoming', models.BooleanField(default=False, verbose_name='Is Upcoming Release')),
                ('is_downloadable', models.BooleanField(default=False, verbose_name='Is Downloadable')),
                ('has_print_version', models.BooleanField(default=False, verbose_name='Has Print Version')),
                ('downloaded', models.PositiveSmallIntegerField(default=0, verbose_name='Count of Downloaded')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Library',
                'verbose_name_plural': 'Libraries',
            },
        ),
        migrations.CreateModel(
            name='MediaContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('file', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_pdf_file, common.validators.validate_no_executable_file], verbose_name='Media File')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Content Link')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Media Content',
                'verbose_name_plural': 'Media Contents',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('image_or_video', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Mission Image/Video')),
                ('mission_name', models.CharField(max_length=255, verbose_name='Mission Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Mission Description')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('is_ongoing', models.BooleanField(default=True, verbose_name='Is Ongoing')),
                ('funding_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Funding Goal')),
                ('raised_funds', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Raised Funds')),
                ('funding_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Funding Link')),
                ('volunteer_opportunities', models.TextField(blank=True, null=True, verbose_name='Volunteer Opportunities')),
                ('mission_report', models.TextField(blank=True, null=True, verbose_name='Mission Report')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Mission',
                'verbose_name_plural': 'Missions',
            },
        ),
        migrations.CreateModel(
            name='Moment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Moment Content')),
                ('moment_file', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_pdf_file, common.validators.validate_no_executable_file], verbose_name='Image/Video')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Updated Date')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Moment',
                'verbose_name_plural': 'Moments',
            },
        ),
        migrations.CreateModel(
            name='Pray',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Pray Title')),
                ('content', models.TextField(verbose_name='Pray Content')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file], verbose_name='Pray Image')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Updated Date')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='Is Accepted')),
                ('is_rejected', models.BooleanField(default=False, verbose_name='Is Rejected')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Pray',
                'verbose_name_plural': 'Prays',
            },
        ),
        migrations.CreateModel(
            name='Preach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Preach Title')),
                ('out_town_preacher', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='Preacher out TownLIT')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file], verbose_name='Lesson Image')),
                ('video', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Lesson Video')),
                ('view', models.PositiveSmallIntegerField(default=0, verbose_name='View Number')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Preach',
                'verbose_name_plural': 'Preaches',
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('like', 'Like'), ('bless', 'Bless'), ('gratitude', 'Gratitude'), ('amen', 'Amen'), ('encouragement', 'Encouragement'), ('empathy', 'Empathy')], max_length=20, verbose_name='Reaction Type')),
                ('message', models.CharField(blank=True, max_length=80, null=True, verbose_name='Reaction Message')),
                ('object_id', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
            ],
            options={
                'verbose_name': '_Reaction',
                'verbose_name_plural': '_Reactions',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_name', models.CharField(max_length=255, verbose_name='Resource Name')),
                ('resource_type', models.CharField(choices=[('document', 'Document'), ('presentation', 'Presentation'), ('image', 'Image'), ('brochure', 'Brochure'), ('catalog', 'Catalog'), ('link', 'Link'), ('guide', 'Guide'), ('music', 'Music'), ('text', 'Text'), ('other', 'Other')], max_length=50, verbose_name='Resource Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('resource_file', models.FileField(blank=True, null=True, upload_to=utils.FileUpload('posts', 'resource_file', 'resource'), validators=[common.validators.validate_pdf_file, common.validators.validate_no_executable_file], verbose_name='Resource File')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Resource URL')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Author/Creator')),
                ('license', models.CharField(blank=True, max_length=100, null=True, verbose_name='License Information')),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
            },
        ),
        migrations.CreateModel(
            name='ServiceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('organization_type', models.CharField(choices=[('Church', 'Church'), ('Mission Organization', 'Mission Organization'), ('Christian Publishing House', 'Christian Publishing House'), ('Christian Counseling Center', 'Christian Counseling Center'), ('Christian Worship Ministry', 'Christian Worship Ministry'), ('Christian Conference Center', 'Christian Conference Center'), ('Christian School, University or Bible College', 'Christian School, University or Bible College'), ('Christian Children’s Organization', 'Christian Children’s Organization'), ('Christian Youth Organization', 'Christian Youth Organization'), ('Christian Women’s Organization', 'Christian Women’s Organization'), ('Christian Men’s Organization', 'Christian Men’s Organization'), ('Store', 'Store')], max_length=50, verbose_name='Organization Type')),
                ('event_type', models.CharField(max_length=50, verbose_name='Event Type')),
                ('custom_event_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Custom Event Type Name')),
                ('event_banner', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file], verbose_name='Event Banner')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('contact_information', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contact Information')),
                ('recurring', models.BooleanField(default=False, verbose_name='Is Recurring')),
                ('frequency', models.CharField(blank=True, choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('annually', 'Annually')], max_length=50, null=True, verbose_name='Frequency')),
                ('event_date', models.DateField(blank=True, null=True, verbose_name='Event Date')),
                ('day_of_week', models.CharField(blank=True, choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=9, null=True, verbose_name='Day of Week')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start Time')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duration')),
                ('additional_notes', models.CharField(blank=True, max_length=100, null=True, verbose_name='Additional Scheduling Notes')),
                ('registration_required', models.BooleanField(default=False, verbose_name='Registration Required')),
                ('registration_link', models.URLField(blank=True, null=True, verbose_name='Registration Link')),
                ('event_method', models.CharField(choices=[('online', 'Online'), ('inperson', 'In-Person'), ('hybrid', 'Hybrid')], default='IN_PERSON', max_length=10, verbose_name='Event Method')),
                ('event_link', models.URLField(blank=True, null=True, verbose_name='Event Link')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Service Event',
                'verbose_name_plural': 'Service Events',
            },
        ),
        migrations.CreateModel(
            name='Testimony',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Testimony Content')),
                ('audio', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_audio_file, common.validators.validate_no_executable_file], verbose_name='Testimony Audio')),
                ('video', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Testimony Video')),
                ('thumbnail_1', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Thumbnail 1')),
                ('thumbnail_2', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Thumbnail 2')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Updated Date')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Testimony',
                'verbose_name_plural': 'Testimonies',
            },
        ),
        migrations.CreateModel(
            name='Witness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Title')),
                ('re_published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Republished Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Witness',
                'verbose_name_plural': 'Witnesses',
            },
        ),
        migrations.CreateModel(
            name='Worship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=50, verbose_name='Worship Title')),
                ('season', models.IntegerField(blank=True, null=True, verbose_name='Season')),
                ('episode', models.IntegerField(blank=True, null=True, verbose_name='Episode')),
                ('sermon', models.CharField(blank=True, max_length=500, null=True, verbose_name='Sermon')),
                ('hymn_lyrics', models.TextField(blank=True, null=True, verbose_name='Hymn Lyrics')),
                ('out_town_leaders', models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='Leaders out TownLIT')),
                ('image', models.ImageField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Worship Image')),
                ('audio', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_audio_file, common.validators.validate_no_executable_file], verbose_name='Worship Audio')),
                ('video', models.FileField(blank=True, null=True, upload_to=utils.FileUpload.dir_upload, validators=[common.validators.validate_image_or_video_file, common.validators.validate_no_executable_file], verbose_name='Worship Video')),
                ('view', models.PositiveSmallIntegerField(default=0, verbose_name='View Number')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('object_id', models.PositiveIntegerField()),
                ('is_suspended', models.BooleanField(default=False, verbose_name='Is Suspended')),
                ('reports_count', models.IntegerField(default=0, verbose_name='Reports Count')),
                ('is_restricted', models.BooleanField(default=False, verbose_name='Restricted')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Is Hidden')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Worship',
                'verbose_name_plural': 'Worships',
            },
        ),
    ]

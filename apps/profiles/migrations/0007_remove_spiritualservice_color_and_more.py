# Generated by Django 4.2.4 on 2025-09-04 23:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.common.utils
import validators.mediaValidators.pdf_validators
import validators.security_validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profiles', '0006_alter_academicrecord_document_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='spiritualservice',
            name='color',
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='credential_issuer',
            field=models.CharField(blank=True, max_length=120, null=True, verbose_name='Credential Issuer'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='credential_number',
            field=models.CharField(blank=True, max_length=80, null=True, verbose_name='Credential Number'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='credential_url',
            field=models.URLField(blank=True, null=True, verbose_name='Credential URL'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='expires_at',
            field=models.DateField(blank=True, null=True, verbose_name='Expires At'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='issued_at',
            field=models.DateField(blank=True, null=True, verbose_name='Issued At'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Verified At'),
        ),
        migrations.AddField(
            model_name='memberservicetype',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Verified By'),
        ),
        migrations.AddField(
            model_name='spiritualservice',
            name='is_sensitive',
            field=models.BooleanField(default=False, verbose_name='Requires Credential'),
        ),
        migrations.AlterField(
            model_name='academicrecord',
            name='document',
            field=models.FileField(blank=True, null=True, upload_to=utils.common.utils.FileUpload.dir_upload, validators=[validators.mediaValidators.pdf_validators.validate_pdf_file, validators.security_validators.validate_no_executable_file], verbose_name='Document'),
        ),
        migrations.AlterField(
            model_name='clientrequest',
            name='document_1',
            field=models.FileField(blank=True, null=True, upload_to=utils.common.utils.FileUpload.dir_upload, validators=[validators.mediaValidators.pdf_validators.validate_pdf_file, validators.security_validators.validate_no_executable_file], verbose_name='Document 1'),
        ),
        migrations.AlterField(
            model_name='clientrequest',
            name='document_2',
            field=models.FileField(blank=True, null=True, upload_to=utils.common.utils.FileUpload.dir_upload, validators=[validators.mediaValidators.pdf_validators.validate_pdf_file, validators.security_validators.validate_no_executable_file], verbose_name='Document 2'),
        ),
        migrations.AlterField(
            model_name='member',
            name='identity_document',
            field=models.FileField(blank=True, null=True, upload_to=utils.common.utils.FileUpload.dir_upload, validators=[validators.mediaValidators.pdf_validators.validate_pdf_file, validators.security_validators.validate_no_executable_file], verbose_name='Identity Document'),
        ),
        migrations.AlterField(
            model_name='memberservicetype',
            name='document',
            field=models.FileField(blank=True, null=True, upload_to=utils.common.utils.FileUpload.dir_upload, validators=[validators.mediaValidators.pdf_validators.validate_pdf_file, validators.security_validators.validate_no_executable_file], verbose_name='Documents'),
        ),
        migrations.AlterField(
            model_name='spiritualservice',
            name='name',
            field=models.CharField(choices=[('pastoring', 'Pastoring'), ('teaching', 'Teaching'), ('counseling', 'Counseling'), ('chaplaincy', 'Chaplaincy'), ('children', 'Children'), ('youth', 'Youth'), ('smallgroups', 'SmallGroups'), ('biblestudy', 'BibleStudy'), ('discipleship', 'Discipleship'), ('mentoring', 'Mentoring'), ('shepherding', 'Shepherding'), ('marriage', 'Marriage'), ('griefcare', 'GriefCare'), ('hospital', 'Hospital'), ('prison', 'Prison'), ('visitation', 'Visitation'), ('refugee', 'Refugee'), ('seniors', 'Seniors'), ('security', 'Security'), ('reconciliation', 'Reconciliation'), ('peacemaking', 'Peacemaking'), ('leadership', 'Leadership'), ('tutoring', 'Tutoring'), ('finance', 'Finance'), ('governance', 'Governance'), ('administration', 'Administration'), ('hospitality', 'Hospitality'), ('greeter', 'Greeter'), ('welcome', 'Welcome'), ('newcomer', 'Newcomer'), ('outreach', 'Outreach'), ('evangelism', 'Evangelism'), ('missions', 'Missions'), ('prayer', 'Prayer'), ('intercession', 'Intercession'), ('worship', 'Worship'), ('music', 'Music'), ('choir', 'Choir'), ('band', 'Band'), ('audio', 'Audio'), ('video', 'Video'), ('sound', 'Sound'), ('lighting', 'Lighting'), ('livestream', 'Livestream'), ('production', 'Production'), ('media', 'Media'), ('photography', 'Photography'), ('design', 'Design'), ('it', 'IT'), ('communications', 'Communications'), ('events', 'Events'), ('logistics', 'Logistics'), ('setup', 'Setup'), ('facilities', 'Facilities'), ('maintenance', 'Maintenance'), ('transport', 'Transport'), ('translation', 'Translation'), ('stewardship', 'Stewardship'), ('training', 'Training'), ('benevolence', 'Benevolence')], max_length=40, unique=True, verbose_name='Name of Service'),
        ),
    ]

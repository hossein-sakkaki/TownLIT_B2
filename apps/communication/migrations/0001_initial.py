# Generated by Django 4.2.4 on 2025-06-10 16:26

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Campaign Title')),
                ('ignore_unsubscribe', models.BooleanField(default=False, help_text='If enabled, email will be sent even to users who unsubscribed.', verbose_name='Ignore Unsubscribed Users')),
                ('custom_html', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Custom Email Body (Optional)')),
                ('subject', models.CharField(max_length=255, verbose_name='Email Subject')),
                ('target_group', models.CharField(choices=[('all_active', 'All Active Users'), ('believer', 'Label: Believers'), ('seeker', 'Label: Seekers'), ('prefer_not_to_say', 'Label: Prefer Not to Say'), ('seeker_and_prefer_not', 'Label: Seekers + Prefer Not to Say'), ('admins', 'TownLIT Admins'), ('deleted_members', 'Deleted Member Accounts'), ('deleted_non_members', 'Deleted Non-Member Accounts'), ('suspended', 'Suspended Accounts'), ('sanctuary_participants', 'Sanctuary-Eligible Members'), ('privacy_enabled', 'Members with Privacy Enabled'), ('unverified_identity', 'Members with Unverified Identity'), ('reengagement', 'Previously Unsubscribed Users (Re-engagement Campaign)'), ('access_requests', 'Pending Access Requests (pre-registration users)')], default='all_active', max_length=50, verbose_name='Target Group')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('scheduled', 'Scheduled')], default='draft', max_length=20, verbose_name='Campaign Status')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled Send Time')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('recipients', models.ManyToManyField(blank=True, help_text='Optional: Select specific users to send this email to. If filled, target group will be ignored.', related_name='manual_campaigns', to=settings.AUTH_USER_MODEL, verbose_name='Specific Recipients')),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Template Name')),
                ('layout', models.CharField(choices=[('base_email', 'System Email (Security, Activation, etc.)'), ('base_site', 'Campaign/Newsletter (Invitation, Updates)')], default='base_site', help_text='Choose the layout this template will use when rendered in emails.', max_length=30, verbose_name='Layout Template')),
                ('subject_template', models.CharField(max_length=255, verbose_name='Email Subject')),
                ('body_template', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='HTML Body Content')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnsubscribedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Used for unsubscribed contacts who are not yet registered users.', max_length=254, unique=True, verbose_name='Email Address')),
                ('unsubscribed_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Unsubscribed At')),
                ('user', models.OneToOneField(blank=True, help_text="If available, refers to a registered user. Otherwise, use 'Email'.", null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Registered User')),
            ],
            options={
                'verbose_name': 'Unsubscribed Contact',
                'verbose_name_plural': 'Unsubscribed Contacts',
                'ordering': ['-unsubscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_at', models.DateTimeField(verbose_name='Scheduled Run Time')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('executed_at', models.DateTimeField(blank=True, null=True, verbose_name='Executed At')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Sent?')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communication.emailcampaign', verbose_name='Email Campaign')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Scheduled By')),
            ],
            options={
                'verbose_name': 'Scheduled Email',
                'verbose_name_plural': 'Scheduled Emails',
                'ordering': ['-run_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalEmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Campaign Title')),
                ('subject', models.CharField(max_length=255, verbose_name='Email Subject')),
                ('html_body', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Custom Email Body (Optional)')),
                ('csv_file', models.FileField(upload_to='external_campaigns/', verbose_name='CSV File with Emails')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('is_sent', models.BooleanField(default=False, verbose_name='Is Sent')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='communication.emailtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='First Name')),
                ('family', models.CharField(blank=True, max_length=100, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, max_length=20, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('nation', models.CharField(blank=True, max_length=100, verbose_name='Nationality')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country of Residence')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Phone Number')),
                ('recognize', models.CharField(blank=True, max_length=100, verbose_name='How They Recognize TownLIT')),
                ('registre_date', models.DateTimeField(blank=True, null=True, verbose_name='Initial Registration Date')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Record Created At')),
                ('is_unsubscribed', models.BooleanField(default=False, verbose_name='Unsubscribed?')),
                ('became_user', models.BooleanField(default=False, verbose_name='Converted to User?')),
                ('became_user_at', models.DateTimeField(blank=True, null=True, verbose_name='User Conversion Date')),
                ('deleted_after_signup', models.BooleanField(default=False, verbose_name='Deleted After Signup?')),
                ('deleted_after_signup_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted After Signup At')),
                ('source_campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='communication.externalemailcampaign', verbose_name='Source Campaign')),
            ],
            options={
                'verbose_name': 'External Contact',
                'verbose_name_plural': 'External Contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Recipient Email')),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Sent At')),
                ('opened', models.BooleanField(default=False, verbose_name='Email Opened')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='Opened At')),
                ('clicked', models.BooleanField(default=False, verbose_name='Link Clicked')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Clicked At')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='communication.emailcampaign', verbose_name='Email Campaign')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User (if registered)')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.AddField(
            model_name='emailcampaign',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='communication.emailtemplate', verbose_name='Email Template'),
        ),
        migrations.CreateModel(
            name='DraftCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, verbose_name='Draft Notes')),
                ('last_edited', models.DateTimeField(auto_now=True, verbose_name='Last Edited At')),
                ('campaign', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='draft', to='communication.emailcampaign', verbose_name='Related Campaign')),
            ],
            options={
                'verbose_name': 'Draft Campaign',
                'verbose_name_plural': 'Draft Campaigns',
                'ordering': ['-last_edited'],
            },
        ),
    ]
